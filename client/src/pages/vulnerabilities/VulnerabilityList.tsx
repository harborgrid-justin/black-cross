import {
  Box,
  Paper,
  Typography,
  Table,
  TableBody,
  TableCell,
  TableContainer,
  TableHead,
  TableRow,
  Chip,
  Button,
  LinearProgress,
} from '@mui/material';
import { Refresh as RefreshIcon } from '@mui/icons-material';

export default function VulnerabilityList() {
  const mockVulnerabilities = [
    {
      id: '1',
      cveId: 'CVE-2023-12345',
      title: 'Remote Code Execution in Apache',
      severity: 'critical',
      cvssScore: 9.8,
      status: 'open',
      affectedAssets: 5,
    },
    {
      id: '2',
      cveId: 'CVE-2023-54321',
      title: 'SQL Injection Vulnerability',
      severity: 'high',
      cvssScore: 8.2,
      status: 'patched',
      affectedAssets: 12,
    },
    {
      id: '3',
      cveId: 'CVE-2023-98765',
      title: 'Cross-Site Scripting (XSS)',
      severity: 'medium',
      cvssScore: 6.5,
      status: 'mitigated',
      affectedAssets: 3,
    },
  ];

  return (
    <Box>
      <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mb: 3 }}>
        <Typography variant="h4" sx={{ fontWeight: 700 }}>
          Vulnerability Management
        </Typography>
        <Button variant="outlined" startIcon={<RefreshIcon />}>
          Scan Now
        </Button>
      </Box>

      <Paper sx={{ p: 3, mb: 3 }}>
        <Typography variant="h6" gutterBottom>
          Risk Overview
        </Typography>
        <Box sx={{ mt: 2 }}>
          {[
            { label: 'Critical', value: 5, color: '#d32f2f' },
            { label: 'High', value: 12, color: '#f57c00' },
            { label: 'Medium', value: 28, color: '#fbc02d' },
            { label: 'Low', value: 45, color: '#388e3c' },
          ].map((item) => (
            <Box key={item.label} sx={{ mb: 2 }}>
              <Box sx={{ display: 'flex', justifyContent: 'space-between', mb: 0.5 }}>
                <Typography variant="body2">{item.label}</Typography>
                <Typography variant="body2">{item.value}</Typography>
              </Box>
              <LinearProgress
                variant="determinate"
                value={(item.value / 90) * 100}
                sx={{
                  height: 8,
                  borderRadius: 1,
                  backgroundColor: 'rgba(255, 255, 255, 0.1)',
                  '& .MuiLinearProgress-bar': { backgroundColor: item.color },
                }}
              />
            </Box>
          ))}
        </Box>
      </Paper>

      <TableContainer component={Paper}>
        <Table>
          <TableHead>
            <TableRow>
              <TableCell sx={{ fontWeight: 600 }}>CVE ID</TableCell>
              <TableCell sx={{ fontWeight: 600 }}>Title</TableCell>
              <TableCell sx={{ fontWeight: 600 }}>Severity</TableCell>
              <TableCell sx={{ fontWeight: 600 }}>CVSS Score</TableCell>
              <TableCell sx={{ fontWeight: 600 }}>Status</TableCell>
              <TableCell sx={{ fontWeight: 600 }}>Affected Assets</TableCell>
            </TableRow>
          </TableHead>
          <TableBody>
            {mockVulnerabilities.map((vuln) => (
              <TableRow key={vuln.id} hover sx={{ cursor: 'pointer' }}>
                <TableCell>{vuln.cveId}</TableCell>
                <TableCell>{vuln.title}</TableCell>
                <TableCell>
                  <Chip
                    label={vuln.severity}
                    color={
                      vuln.severity === 'critical'
                        ? 'error'
                        : vuln.severity === 'high'
                        ? 'warning'
                        : 'info'
                    }
                    size="small"
                  />
                </TableCell>
                <TableCell>{vuln.cvssScore}</TableCell>
                <TableCell>
                  <Chip label={vuln.status} size="small" variant="outlined" />
                </TableCell>
                <TableCell>{vuln.affectedAssets}</TableCell>
              </TableRow>
            ))}
          </TableBody>
        </Table>
      </TableContainer>
    </Box>
  );
}
