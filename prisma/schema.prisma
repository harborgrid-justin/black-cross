// Prisma Schema for Black-Cross Enterprise Cyber Threat Intelligence Platform
// This schema defines the core data models for PostgreSQL database

generator client {
  provider = "prisma-client-js"
  output   = "../backend/node_modules/.prisma/client"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// User Management
model User {
  id            String   @id @default(uuid())
  email         String   @unique
  username      String   @unique
  password      String
  firstName     String?  @map("first_name")
  lastName      String?  @map("last_name")
  role          String   @default("analyst")
  isActive      Boolean  @default(true) @map("is_active")
  lastLogin     DateTime? @map("last_login")
  createdAt     DateTime @default(now()) @map("created_at")
  updatedAt     DateTime @updatedAt @map("updated_at")

  incidents     Incident[]
  auditLogs     AuditLog[]

  @@map("users")
}

// Incident Management
model Incident {
  id            String   @id @default(uuid())
  title         String
  description   String?
  severity      String   @default("medium")
  status        String   @default("open")
  priority      Int      @default(3)
  category      String?
  assignedToId  String?  @map("assigned_to_id")
  assignedTo    User?    @relation(fields: [assignedToId], references: [id])
  detectedAt    DateTime @map("detected_at")
  resolvedAt    DateTime? @map("resolved_at")
  createdAt     DateTime @default(now()) @map("created_at")
  updatedAt     DateTime @updatedAt @map("updated_at")

  @@index([status])
  @@index([severity])
  @@index([assignedToId])
  @@map("incidents")
}

// Vulnerability Management
model Vulnerability {
  id            String   @id @default(uuid())
  cveId         String?  @unique @map("cve_id")
  title         String
  description   String?
  severity      String
  cvssScore     Float?   @map("cvss_score")
  affectedSystems String[] @map("affected_systems")
  status        String   @default("open")
  publishedAt   DateTime? @map("published_at")
  discoveredAt  DateTime @map("discovered_at")
  patchedAt     DateTime? @map("patched_at")
  createdAt     DateTime @default(now()) @map("created_at")
  updatedAt     DateTime @updatedAt @map("updated_at")

  @@index([cveId])
  @@index([severity])
  @@index([status])
  @@map("vulnerabilities")
}

// Asset Management
model Asset {
  id            String   @id @default(uuid())
  name          String
  type          String
  ipAddress     String?  @map("ip_address")
  hostname      String?
  criticality   String   @default("medium")
  owner         String?
  location      String?
  environment   String?
  tags          String[]
  metadata      Json?
  createdAt     DateTime @default(now()) @map("created_at")
  updatedAt     DateTime @updatedAt @map("updated_at")

  @@index([type])
  @@index([criticality])
  @@map("assets")
}

// Audit Logs
model AuditLog {
  id            String   @id @default(uuid())
  userId        String   @map("user_id")
  user          User     @relation(fields: [userId], references: [id])
  action        String
  resource      String
  resourceId    String?  @map("resource_id")
  details       Json?
  ipAddress     String?  @map("ip_address")
  userAgent     String?  @map("user_agent")
  timestamp     DateTime @default(now())

  @@index([userId])
  @@index([action])
  @@index([timestamp])
  @@map("audit_logs")
}

// IOC (Indicators of Compromise)
model IOC {
  id            String   @id @default(uuid())
  type          String
  value         String
  description   String?
  severity      String
  confidence    Int      @default(50)
  firstSeen     DateTime @map("first_seen")
  lastSeen      DateTime @map("last_seen")
  tags          String[]
  source        String?
  isActive      Boolean  @default(true) @map("is_active")
  metadata      Json?
  createdAt     DateTime @default(now()) @map("created_at")
  updatedAt     DateTime @updatedAt @map("updated_at")

  @@index([type])
  @@index([value])
  @@index([severity])
  @@map("iocs")
}

// Threat Actors
model ThreatActor {
  id            String   @id @default(uuid())
  name          String   @unique
  aliases       String[]
  description   String?
  sophistication String?
  motivation    String[]
  firstSeen     DateTime? @map("first_seen")
  lastSeen      DateTime? @map("last_seen")
  country       String?
  tags          String[]
  metadata      Json?
  createdAt     DateTime @default(now()) @map("created_at")
  updatedAt     DateTime @updatedAt @map("updated_at")

  @@index([name])
  @@map("threat_actors")
}

// Playbook Executions (for automation tracking)
model PlaybookExecution {
  id            String   @id @default(uuid())
  playbookId    String   @map("playbook_id")
  playbookName  String   @map("playbook_name")
  status        String   @default("pending")
  triggeredBy   String   @map("triggered_by")
  startedAt     DateTime @default(now()) @map("started_at")
  completedAt   DateTime? @map("completed_at")
  duration      Int?
  result        Json?
  errorMessage  String?  @map("error_message")
  metadata      Json?

  @@index([playbookId])
  @@index([status])
  @@index([startedAt])
  @@map("playbook_executions")
}
