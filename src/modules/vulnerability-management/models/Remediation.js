/**
 * Remediation Model
 *
 * Tracks remediation efforts for vulnerabilities
 */

const { v4: uuidv4 } = require('uuid');

class Remediation {
  constructor(data = {}) {
    this.id = data.id || uuidv4();
    this.vulnerability_id = data.vulnerability_id || null;
    this.title = data.title || '';
    this.description = data.description || '';
    this.remediation_type = data.remediation_type || 'patch'; // patch, configuration, workaround, mitigation, accept_risk
    this.status = data.status || 'planned'; // planned, in_progress, testing, completed, failed, cancelled
    this.priority = data.priority || 'medium'; // critical, high, medium, low
    this.assigned_to = data.assigned_to || null;
    this.assigned_team = data.assigned_team || null;
    this.due_date = data.due_date || null;
    this.started_at = data.started_at || null;
    this.completed_at = data.completed_at || null;
    this.verified = data.verified !== undefined ? data.verified : false;
    this.verification_date = data.verification_date || null;
    this.verification_method = data.verification_method || null;
    this.verification_notes = data.verification_notes || null;
    this.sla_met = data.sla_met !== undefined ? data.sla_met : true;
    this.remediation_steps = data.remediation_steps || [];
    this.affected_assets = data.affected_assets || [];
    this.patch_id = data.patch_id || null;
    this.cost_estimate = data.cost_estimate || null;
    this.actual_cost = data.actual_cost || null;
    this.risk_accepted = data.risk_accepted !== undefined ? data.risk_accepted : false;
    this.risk_acceptance_reason = data.risk_acceptance_reason || null;
    this.risk_accepted_by = data.risk_accepted_by || null;
    this.risk_acceptance_expires = data.risk_acceptance_expires || null;
    this.notes = data.notes || '';
    this.created_by = data.created_by || null;
    this.created_at = data.created_at || new Date();
    this.updated_at = data.updated_at || new Date();
  }

  /**
   * Start remediation work
   */
  start() {
    this.status = 'in_progress';
    this.started_at = new Date();
    this.updated_at = new Date();
  }

  /**
   * Complete remediation
   */
  complete(notes = null) {
    this.status = 'completed';
    this.completed_at = new Date();
    if (notes) {
      this.notes = notes;
    }
    this.checkSLA();
    this.updated_at = new Date();
  }

  /**
   * Verify remediation
   */
  verify(method, notes = null) {
    this.verified = true;
    this.verification_date = new Date();
    this.verification_method = method;
    if (notes) {
      this.verification_notes = notes;
    }
    this.updated_at = new Date();
  }

  /**
   * Accept risk instead of remediating
   */
  acceptRisk(reason, acceptedBy, expiresAt = null) {
    this.risk_accepted = true;
    this.risk_acceptance_reason = reason;
    this.risk_accepted_by = acceptedBy;
    this.risk_acceptance_expires = expiresAt;
    this.status = 'completed';
    this.completed_at = new Date();
    this.updated_at = new Date();
  }

  /**
   * Check if SLA was met
   */
  checkSLA() {
    if (this.due_date && this.completed_at) {
      this.sla_met = this.completed_at <= this.due_date;
    }
    return this.sla_met;
  }

  /**
   * Calculate time to remediate in days
   */
  getTimeToRemediate() {
    if (this.started_at && this.completed_at) {
      return Math.ceil((this.completed_at - this.started_at) / (1000 * 60 * 60 * 24));
    }
    return null;
  }

  /**
   * Convert to plain object for storage/API
   */
  toJSON() {
    return {
      id: this.id,
      vulnerability_id: this.vulnerability_id,
      title: this.title,
      description: this.description,
      remediation_type: this.remediation_type,
      status: this.status,
      priority: this.priority,
      assigned_to: this.assigned_to,
      assigned_team: this.assigned_team,
      due_date: this.due_date,
      started_at: this.started_at,
      completed_at: this.completed_at,
      verified: this.verified,
      verification_date: this.verification_date,
      verification_method: this.verification_method,
      verification_notes: this.verification_notes,
      sla_met: this.sla_met,
      remediation_steps: this.remediation_steps,
      affected_assets: this.affected_assets,
      patch_id: this.patch_id,
      cost_estimate: this.cost_estimate,
      actual_cost: this.actual_cost,
      risk_accepted: this.risk_accepted,
      risk_acceptance_reason: this.risk_acceptance_reason,
      risk_accepted_by: this.risk_accepted_by,
      risk_acceptance_expires: this.risk_acceptance_expires,
      notes: this.notes,
      created_by: this.created_by,
      created_at: this.created_at,
      updated_at: this.updated_at
    };
  }
}

module.exports = Remediation;
