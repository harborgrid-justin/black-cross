/**
 * Asset Vulnerability Mapping Model
 * 
 * Maps vulnerabilities to affected assets
 */

const { v4: uuidv4 } = require('uuid');

class AssetVulnerabilityMapping {
  constructor(data = {}) {
    this.id = data.id || uuidv4();
    this.asset_id = data.asset_id || null;
    this.asset_name = data.asset_name || '';
    this.asset_type = data.asset_type || ''; // server, workstation, network_device, application, etc.
    this.vulnerability_id = data.vulnerability_id || null;
    this.exposure_level = data.exposure_level || 'internal'; // external, internal, isolated
    this.asset_criticality = data.asset_criticality || 5; // 1-10 scale
    this.business_unit = data.business_unit || null;
    this.environment = data.environment || 'production'; // production, staging, development, test
    this.first_detected = data.first_detected || new Date();
    this.last_detected = data.last_detected || new Date();
    this.port = data.port || null;
    this.protocol = data.protocol || null;
    this.service = data.service || null;
    this.resolution_status = data.resolution_status || 'open'; // open, in_progress, resolved
    this.false_positive = data.false_positive !== undefined ? data.false_positive : false;
    this.notes = data.notes || '';
    this.created_at = data.created_at || new Date();
    this.updated_at = data.updated_at || new Date();
  }

  /**
   * Mark as false positive
   */
  markAsFalsePositive(reason = '') {
    this.false_positive = true;
    this.notes = reason;
    this.resolution_status = 'resolved';
    this.updated_at = new Date();
  }

  /**
   * Update detection timestamp
   */
  updateDetection() {
    this.last_detected = new Date();
    this.updated_at = new Date();
  }

  /**
   * Calculate exposure score based on criticality and exposure level
   */
  getExposureScore() {
    const exposureMultiplier = {
      external: 1.5,
      internal: 1.0,
      isolated: 0.5
    };
    return this.asset_criticality * (exposureMultiplier[this.exposure_level] || 1.0);
  }

  /**
   * Convert to plain object for storage/API
   */
  toJSON() {
    return {
      id: this.id,
      asset_id: this.asset_id,
      asset_name: this.asset_name,
      asset_type: this.asset_type,
      vulnerability_id: this.vulnerability_id,
      exposure_level: this.exposure_level,
      asset_criticality: this.asset_criticality,
      business_unit: this.business_unit,
      environment: this.environment,
      first_detected: this.first_detected,
      last_detected: this.last_detected,
      port: this.port,
      protocol: this.protocol,
      service: this.service,
      resolution_status: this.resolution_status,
      false_positive: this.false_positive,
      notes: this.notes,
      created_at: this.created_at,
      updated_at: this.updated_at
    };
  }
}

module.exports = AssetVulnerabilityMapping;
