/**
 * Patch Model
 *
 * Represents a security patch or remediation package
 */

const { v4: uuidv4 } = require('uuid');

class Patch {
  constructor(data = {}) {
    this.id = data.id || uuidv4();
    this.name = data.name || '';
    this.vendor = data.vendor || '';
    this.product = data.product || '';
    this.version = data.version || '';
    this.patch_id = data.patch_id || '';
    this.description = data.description || '';
    this.severity = data.severity || 'medium'; // critical, high, medium, low
    this.patch_type = data.patch_type || 'security'; // security, feature, bugfix
    this.release_date = data.release_date || null;
    this.superseded_by = data.superseded_by || null;
    this.supersedes = data.supersedes || [];
    this.addressed_vulnerabilities = data.addressed_vulnerabilities || [];
    this.addressed_cves = data.addressed_cves || [];
    this.deployment_status = data.deployment_status || 'available'; // available, testing, approved, deployed, failed
    this.deployment_priority = data.deployment_priority || 'medium'; // critical, high, medium, low
    this.requires_reboot = data.requires_reboot !== undefined ? data.requires_reboot : false;
    this.rollback_available = data.rollback_available !== undefined ? data.rollback_available : true;
    this.tested = data.tested !== undefined ? data.tested : false;
    this.testing_notes = data.testing_notes || null;
    this.deployment_notes = data.deployment_notes || null;
    this.download_url = data.download_url || null;
    this.documentation_url = data.documentation_url || null;
    this.created_at = data.created_at || new Date();
    this.updated_at = data.updated_at || new Date();
  }

  /**
   * Check if patch is critical
   */
  isCritical() {
    return this.severity === 'critical' || this.deployment_priority === 'critical';
  }

  /**
   * Update deployment status
   */
  updateDeploymentStatus(status, notes = null) {
    this.deployment_status = status;
    if (notes) {
      this.deployment_notes = notes;
    }
    this.updated_at = new Date();
  }

  /**
   * Mark as tested
   */
  markAsTested(notes = null) {
    this.tested = true;
    if (notes) {
      this.testing_notes = notes;
    }
    this.updated_at = new Date();
  }

  /**
   * Convert to plain object for storage/API
   */
  toJSON() {
    return {
      id: this.id,
      name: this.name,
      vendor: this.vendor,
      product: this.product,
      version: this.version,
      patch_id: this.patch_id,
      description: this.description,
      severity: this.severity,
      patch_type: this.patch_type,
      release_date: this.release_date,
      superseded_by: this.superseded_by,
      supersedes: this.supersedes,
      addressed_vulnerabilities: this.addressed_vulnerabilities,
      addressed_cves: this.addressed_cves,
      deployment_status: this.deployment_status,
      deployment_priority: this.deployment_priority,
      requires_reboot: this.requires_reboot,
      rollback_available: this.rollback_available,
      tested: this.tested,
      testing_notes: this.testing_notes,
      deployment_notes: this.deployment_notes,
      download_url: this.download_url,
      documentation_url: this.documentation_url,
      created_at: this.created_at,
      updated_at: this.updated_at
    };
  }
}

module.exports = Patch;
