/**
 * Capability-Based Access Control
 * Adapted from OpenCTI Platform
 * 
 * Defines fine-grained capabilities for different operations
 */

export const CAPABILITIES = {
  // Knowledge Management - Core threat intelligence operations
  KNOWLEDGE_READ: 'KNOWLEDGE:READ',
  KNOWLEDGE_CREATE: 'KNOWLEDGE:CREATE',
  KNOWLEDGE_UPDATE: 'KNOWLEDGE:UPDATE',
  KNOWLEDGE_DELETE: 'KNOWLEDGE:DELETE',
  KNOWLEDGE_IMPORT: 'KNOWLEDGE:IMPORT',
  KNOWLEDGE_EXPORT: 'KNOWLEDGE:EXPORT',
  
  // Settings & Configuration
  SETTINGS_READ: 'SETTINGS:READ',
  SETTINGS_UPDATE: 'SETTINGS:UPDATE',
  SETTINGS_SET_ACCESSES: 'SETTINGS:SET_ACCESSES',
  
  // User & Group Management
  USER_READ: 'USER:READ',
  USER_CREATE: 'USER:CREATE',
  USER_UPDATE: 'USER:UPDATE',
  USER_DELETE: 'USER:DELETE',
  
  GROUP_READ: 'GROUP:READ',
  GROUP_CREATE: 'GROUP:CREATE',
  GROUP_UPDATE: 'GROUP:UPDATE',
  GROUP_DELETE: 'GROUP:DELETE',
  
  // Organization Management
  ORGANIZATION_READ: 'ORGANIZATION:READ',
  ORGANIZATION_CREATE: 'ORGANIZATION:CREATE',
  ORGANIZATION_UPDATE: 'ORGANIZATION:UPDATE',
  ORGANIZATION_DELETE: 'ORGANIZATION:DELETE',
  
  // Playbook & Automation
  PLAYBOOK_READ: 'PLAYBOOK:READ',
  PLAYBOOK_CREATE: 'PLAYBOOK:CREATE',
  PLAYBOOK_UPDATE: 'PLAYBOOK:UPDATE',
  PLAYBOOK_DELETE: 'PLAYBOOK:DELETE',
  PLAYBOOK_EXECUTE: 'PLAYBOOK:EXECUTE',
  
  // Incident Response
  INCIDENT_READ: 'INCIDENT:READ',
  INCIDENT_CREATE: 'INCIDENT:CREATE',
  INCIDENT_UPDATE: 'INCIDENT:UPDATE',
  INCIDENT_DELETE: 'INCIDENT:DELETE',
  
  // Vulnerability Management
  VULNERABILITY_READ: 'VULNERABILITY:READ',
  VULNERABILITY_CREATE: 'VULNERABILITY:CREATE',
  VULNERABILITY_UPDATE: 'VULNERABILITY:UPDATE',
  VULNERABILITY_DELETE: 'VULNERABILITY:DELETE',
  
  // IOC Management
  IOC_READ: 'IOC:READ',
  IOC_CREATE: 'IOC:CREATE',
  IOC_UPDATE: 'IOC:UPDATE',
  IOC_DELETE: 'IOC:DELETE',
  
  // Reporting & Analytics
  REPORT_READ: 'REPORT:READ',
  REPORT_CREATE: 'REPORT:CREATE',
  REPORT_UPDATE: 'REPORT:UPDATE',
  REPORT_DELETE: 'REPORT:DELETE',
  
  // Security Activity Monitoring
  SECURITY_ACTIVITY_READ: 'SECURITY:ACTIVITY:READ',
  SECURITY_ACTIVITY_MANAGE: 'SECURITY:ACTIVITY:MANAGE',
  
  // AI Capabilities
  AI_USE: 'AI:USE',
  AI_MANAGE: 'AI:MANAGE',
  
  // Special Capabilities
  BYPASS_ENTERPRISE: 'BYPASS:ENTERPRISE',              // Admin bypass
  VIRTUAL_ORGANIZATION_ADMIN: 'VIRTUAL:ORG:ADMIN',     // Organization admin
  SYSTEM_USER: 'SYSTEM:USER'                           // System operations
} as const;

export type Capability = typeof CAPABILITIES[keyof typeof CAPABILITIES];

/**
 * Role Templates - Pre-defined sets of capabilities
 */
export const ROLE_TEMPLATES = {
  VIEWER: [
    CAPABILITIES.KNOWLEDGE_READ,
    CAPABILITIES.INCIDENT_READ,
    CAPABILITIES.VULNERABILITY_READ,
    CAPABILITIES.IOC_READ,
    CAPABILITIES.REPORT_READ,
    CAPABILITIES.USER_READ,
    CAPABILITIES.GROUP_READ
  ],
  
  ANALYST: [
    CAPABILITIES.KNOWLEDGE_READ,
    CAPABILITIES.KNOWLEDGE_CREATE,
    CAPABILITIES.KNOWLEDGE_UPDATE,
    CAPABILITIES.INCIDENT_READ,
    CAPABILITIES.INCIDENT_CREATE,
    CAPABILITIES.INCIDENT_UPDATE,
    CAPABILITIES.VULNERABILITY_READ,
    CAPABILITIES.VULNERABILITY_CREATE,
    CAPABILITIES.VULNERABILITY_UPDATE,
    CAPABILITIES.IOC_READ,
    CAPABILITIES.IOC_CREATE,
    CAPABILITIES.IOC_UPDATE,
    CAPABILITIES.REPORT_READ,
    CAPABILITIES.REPORT_CREATE,
    CAPABILITIES.AI_USE
  ],
  
  SENIOR_ANALYST: [
    CAPABILITIES.KNOWLEDGE_READ,
    CAPABILITIES.KNOWLEDGE_CREATE,
    CAPABILITIES.KNOWLEDGE_UPDATE,
    CAPABILITIES.KNOWLEDGE_DELETE,
    CAPABILITIES.KNOWLEDGE_EXPORT,
    CAPABILITIES.INCIDENT_READ,
    CAPABILITIES.INCIDENT_CREATE,
    CAPABILITIES.INCIDENT_UPDATE,
    CAPABILITIES.INCIDENT_DELETE,
    CAPABILITIES.VULNERABILITY_READ,
    CAPABILITIES.VULNERABILITY_CREATE,
    CAPABILITIES.VULNERABILITY_UPDATE,
    CAPABILITIES.VULNERABILITY_DELETE,
    CAPABILITIES.IOC_READ,
    CAPABILITIES.IOC_CREATE,
    CAPABILITIES.IOC_UPDATE,
    CAPABILITIES.IOC_DELETE,
    CAPABILITIES.REPORT_READ,
    CAPABILITIES.REPORT_CREATE,
    CAPABILITIES.REPORT_UPDATE,
    CAPABILITIES.PLAYBOOK_READ,
    CAPABILITIES.PLAYBOOK_EXECUTE,
    CAPABILITIES.AI_USE
  ],
  
  ADMIN: [
    CAPABILITIES.BYPASS_ENTERPRISE // Admin has all capabilities
  ],
  
  ORGANIZATION_ADMIN: [
    CAPABILITIES.VIRTUAL_ORGANIZATION_ADMIN,
    CAPABILITIES.KNOWLEDGE_READ,
    CAPABILITIES.KNOWLEDGE_CREATE,
    CAPABILITIES.KNOWLEDGE_UPDATE,
    CAPABILITIES.KNOWLEDGE_DELETE,
    CAPABILITIES.USER_READ,
    CAPABILITIES.USER_CREATE,
    CAPABILITIES.USER_UPDATE,
    CAPABILITIES.GROUP_READ,
    CAPABILITIES.GROUP_CREATE,
    CAPABILITIES.GROUP_UPDATE,
    CAPABILITIES.ORGANIZATION_READ,
    CAPABILITIES.ORGANIZATION_UPDATE,
    CAPABILITIES.SETTINGS_READ,
    CAPABILITIES.SETTINGS_UPDATE
  ]
} as const;

/**
 * Get capabilities for a role template
 */
export const getCapabilitiesForRole = (role: keyof typeof ROLE_TEMPLATES): Capability[] => {
  return ROLE_TEMPLATES[role] || [];
};

/**
 * Check if a capability is a special/privileged capability
 */
export const isPrivilegedCapability = (capability: Capability): boolean => {
  return [
    CAPABILITIES.BYPASS_ENTERPRISE,
    CAPABILITIES.VIRTUAL_ORGANIZATION_ADMIN,
    CAPABILITIES.SYSTEM_USER,
    CAPABILITIES.SETTINGS_SET_ACCESSES
  ].includes(capability);
};
