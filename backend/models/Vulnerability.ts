/**
 * Vulnerability Model - Sequelize
 * CVE tracking and vulnerability management
 */

import {
  Table,
  Column,
  Model,
  DataType,
  PrimaryKey,
  Default,
  Unique,
  AllowNull,
  CreatedAt,
  UpdatedAt,
  Index,
} from 'sequelize-typescript';

@Table({
  tableName: 'vulnerabilities',
  underscored: true,
  timestamps: true,
  indexes: [
    { fields: ['cve_id'] },
    { fields: ['severity'] },
    { fields: ['status'] },
  ],
})
export default class Vulnerability extends Model {
  @PrimaryKey
  @Default(DataType.UUIDV4)
  @Column(DataType.UUID)
    id!: string;

  @Unique
  @Column({
    type: DataType.STRING,
    field: 'cve_id',
  })
    cveId?: string;

  @AllowNull(false)
  @Column(DataType.STRING)
    title!: string;

  @Column(DataType.TEXT)
    description?: string;

  @AllowNull(false)
  @Index
  @Column(DataType.STRING)
    severity!: string;

  @Column({
    type: DataType.FLOAT,
    field: 'cvss_score',
  })
    cvssScore?: number;

  @AllowNull(false)
  @Column({
    type: DataType.ARRAY(DataType.STRING),
    field: 'affected_systems',
  })
    affectedSystems!: string[];

  @Default('open')
  @AllowNull(false)
  @Index
  @Column(DataType.STRING)
    status!: string;

  @Column({
    type: DataType.DATE,
    field: 'published_at',
  })
    publishedAt?: Date;

  @AllowNull(false)
  @Column({
    type: DataType.DATE,
    field: 'discovered_at',
  })
    discoveredAt!: Date;

  @Column({
    type: DataType.DATE,
    field: 'patched_at',
  })
    patchedAt?: Date;

  @CreatedAt
  @Column({
    type: DataType.DATE,
    field: 'created_at',
  })
    createdAt!: Date;

  @UpdatedAt
  @Column({
    type: DataType.DATE,
    field: 'updated_at',
  })
    updatedAt!: Date;
}
