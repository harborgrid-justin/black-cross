/**
 * Vulnerability Validation Schemas
 */

import Joi from 'joi';

// Create/Update vulnerability schema
const vulnerabilitySchema = Joi.object({
  cve_id: Joi.string().pattern(/^CVE-\d{4}-\d{4,}$/).optional(),
  title: Joi.string().min(3).max(500).required(),
  description: Joi.string().min(10).required(),
  severity: Joi.string().valid('critical', 'high', 'medium', 'low', 'info').required(),
  cvss_score: Joi.number().min(0).max(10).optional(),
  cvss_vector: Joi.string().optional(),
  affected_systems: Joi.array().items(Joi.string()).optional(),
  affected_software: Joi.array().items(Joi.object({
    name: Joi.string().required(),
    version: Joi.string().optional(),
    vendor: Joi.string().optional(),
  })).optional(),
  remediation: Joi.string().optional(),
  workaround: Joi.string().optional(),
  references: Joi.array().items(Joi.string().uri()).optional(),
  tags: Joi.array().items(Joi.string()).optional(),
  status: Joi.string().valid('open', 'in_progress', 'resolved', 'mitigated', 'accepted').optional(),
  assigned_to: Joi.string().optional(),
  discovered_date: Joi.date().iso().optional(),
  due_date: Joi.date().iso().optional(),
}).min(1);

// Update vulnerability schema (partial)
const vulnerabilityUpdateSchema = Joi.object({
  title: Joi.string().min(3).max(500).optional(),
  description: Joi.string().min(10).optional(),
  severity: Joi.string().valid('critical', 'high', 'medium', 'low', 'info').optional(),
  cvss_score: Joi.number().min(0).max(10).optional(),
  cvss_vector: Joi.string().optional(),
  affected_systems: Joi.array().items(Joi.string()).optional(),
  affected_software: Joi.array().items(Joi.object({
    name: Joi.string().required(),
    version: Joi.string().optional(),
    vendor: Joi.string().optional(),
  })).optional(),
  remediation: Joi.string().optional(),
  workaround: Joi.string().optional(),
  references: Joi.array().items(Joi.string().uri()).optional(),
  tags: Joi.array().items(Joi.string()).optional(),
  status: Joi.string().valid('open', 'in_progress', 'resolved', 'mitigated', 'accepted').optional(),
  assigned_to: Joi.string().optional(),
  due_date: Joi.date().iso().optional(),
}).min(1);

export default {
  vulnerabilitySchema,
  vulnerabilityUpdateSchema,
};
